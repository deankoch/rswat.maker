% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/save_qswat.R
\name{save_qswat}
\alias{save_qswat}
\title{Make a QSWAT+-friendly copy of your (sub-)catchment data files}
\usage{
save_qswat(
  data_dir,
  sub = FALSE,
  overwrite = FALSE,
  quiet = FALSE,
  lake_area = 0.5,
  burn = 50,
  na_soil = NULL,
  na_land = NULL,
  na_dem = -32768
)
}
\arguments{
\item{data_dir}{character path to the directory for input/output files}

\item{sub}{logical, if \code{TRUE} the function processes sub-catchments in "split/"}

\item{overwrite}{logical, whether to write the output or just return the file paths}

\item{quiet}{logical, suppresses certain messages (for internal use)}

\item{lake_area}{numeric (in km2), lakes with area lower than \code{lake_area} are omitted}

\item{burn}{numeric >= 0, stream reach burn-in depth and width, in meters}

\item{na_soil}{integer value to replace NaN in soils raster (or NULL to set to mode)}

\item{na_land}{integer value to replace NaN in land use raster (or NULL to set to mode)}

\item{na_dem}{integer value to replace NaN in dem raster (or NULL to set to mode)}
}
\value{
the file names to write
}
\description{
This function creates a set of files ready to load in QSWAT+ and sufficient to
define and construct a basic SWAT+ model. When \code{overwrite=FALSE} the function
writes nothing but returns the file paths that would be written.
}
\details{
When \code{overwrite=TRUE} and \code{sub=FALSE} the following are written to the "qswat"
sub-directory of your \code{data_dir}.
\itemize{
\item copy of the DEM with streams burned-in (as GeoTIFF)
\item land use raster
\item STATSGO2/SSURGO MUKEY raster (as GeoTIFF)
\item lookup table for land use (as CSV)
\item inlets/outlets shape file
}

Users must first run all of the \verb{get_*} functions (\code{get_catch}, \code{get_dem}, etc) to
download the necessary datasets before calling \code{save_qswat}. Note that calling this
function with \code{overwrite=TRUE} does not delete existing QSWAT+ project files found in
"qswat" (but these should be regenerated with \code{run_qswat} after making any changes to
inputs).

Burn-in refers to artificially reducing the elevation in the DEM under known stream reaches.
This is to assist the TauDEM algorithm (used in QSWAT+) in finding the correct routing
network based on the DEM alone. The function creates stream reaches by expanding flow lines
to form channel polygons of width \code{burn}. It then uses \code{terra::rasterizes} to reduce
the value of any DEM pixel that overlaps with a channel by the fixed value \code{burn}.

The main outlet is always included in the output, along with any inlets listed in the
'inlet.geojson' and 'gage.geojson' files (created by get_split). If the 'site_no' for
one of these inlets/outlets matches a row in the gage file, then the coordinates for
that point are replaced with the (unsnapped) gage coordinates.

If \code{sub=TRUE} the function processes the sub-catchments created by \code{get_split} in a loop
(equivalent to passing these sub-directories one at a time to \code{save_qswat} with \code{sub=FALSE}).
This produces a complete set of QSWAT+ files for each of the sub-directories in "split"

All geo-referenced outputs are written in UTM coordinates, where the zone is
determined by the main outlet point location (see \code{?to_utm}).

Lakes are burned into the land use raster with the integer code signifying 'watr'. Other
\code{NA} values in this raster are assigned the (integer) code \code{na_land}, or if it is \code{NULL},
the mode (ie most frequent non-\code{NA} code, or the first encountered in case of ties).
\code{NA} soil values are handled the same way; The function uses the \code{na_soil} MUKEY , or
if it is \code{NULL}, the mode.

Note that weather files are the responsibility of the user, and should be added after
calling this function (and possibly after running QSWAT+ to find HRU locations).
}
\examples{
save_qswat('/example')
}
